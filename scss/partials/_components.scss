@import "./vars";

@keyframes clickAnimation {
    from{
        transform: translateY(0px);
    }
    to{
        transform: translateY(5px);
    }
}

@keyframes upNdown {
    from {transform: translateY(-1px);}
    to {transform: translateY(1px);}
}

@mixin button ($colorScheme){
    display: flex;
    width: 100%;
    justify-content: center;
    a{
        border-radius: 50px;
        text-decoration: none;
        text-align: center; 
        padding: 10px;
        transition: all 500ms;
        &::after{
            content: "\00a0\00a0\00a0"; //Dejo espacio para los dos caracteres que van a aparecer despues.
            display: inline-block; //Sin esto la animacion no funciona.
        } 
        &::before{
            content: "\00a0\00a0\00a0"; //Simplemente para que tenga simetria
        } 
        @if $colorScheme == "light"{
            background-color: map-get($pageColors, main);
            border: 3px solid map-get($pageColors, main);
            color: map-get($pageColors, dark);
            &:hover{
                background-color: map-get($pageColors, lightMain);
                color: map-get($pageColors, dark);
            }
        } @else{
            background-color: map-get($pageColors, main);
            border: 3px solid map-get($pageColors, main);
            color: map-get($pageColors, dark);
            &:hover{
                background-color: map-get($pageColors, dark);
                color: map-get($pageColors, light);
            }
        }
        &:hover{
            &::after{
                content: "\00a0 Â»";
                animation: upNdown 300ms ease-in-out infinite alternate;
            }
        }
        &:focus{
            animation-name: clickAnimation;
            animation-duration: 100ms;
        }
    }
}

@mixin icon($size){
    width: $size;
    height: $size;
    // Dejar a los iconos centrados
    display: flex;  
    flex-direction: column;
    align-items: center;
    justify-content: center;
    border: 2px solid map-get($pageColors, main);
    border-radius: $size;
    // Imagen de fondo para la animacion
    overflow: hidden;
    background: center/cover no-repeat; 
    background-image: linear-gradient(to top, #bbcc627f 10%, #00000000);
    background-position-y: $size+20px; //La saco fuera de la pantalla
    transition: all 500ms ease-in-out, translateY 100ms;
    a{
        svg{
            width: $size*0.6;
            height: $size*0.6;
            color: map-get($pageColors, main);
            transform: rotatex(0deg);
            transition: all 400ms, translateY 100ms;
        }
    }
    &:hover{
        background-image: linear-gradient(to top, map-get($pageColors, lightMain) 50%, #00000000);
        background-position-y: 0px;
        a{
            svg{
                transform: rotateY(360deg);
                color: map-get($pageColors, dark);
            }
        }
    }
    @media (min-width: 481px) and (max-width: 768px){
        $tabletSize: $size*1.25;
        width: $tabletSize;
        height: $tabletSize;
        a{
            svg{
                width: $tabletSize*0.6;
                height: $tabletSize*0.6;
            }
        }
    }
    @media screen and (min-width: 768px){
        $desktopSize: $size*1.5;
        height: $desktopSize;
        width: $desktopSize;
        a{
            svg{
                width: $desktopSize*0.6;
                height: $desktopSize*0.6;
            }
        }
    }
}